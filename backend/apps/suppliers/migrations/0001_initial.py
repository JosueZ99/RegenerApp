# Generated by Django 5.0.1 on 2025-08-07 04:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('materials', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nombre del Proveedor')),
                ('commercial_name', models.CharField(blank=True, help_text='Nombre comercial si es diferente al legal', max_length=150, verbose_name='Nombre Comercial')),
                ('supplier_type', models.CharField(choices=[('materials', 'Materiales de Construcción'), ('lighting', 'Iluminación'), ('electrical', 'Eléctrico'), ('services', 'Servicios'), ('mixed', 'Mixto')], max_length=20, verbose_name='Tipo de Proveedor')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='Persona de Contacto')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Número de teléfono debe tener formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono Principal')),
                ('phone_secondary', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Número de teléfono debe tener formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono Secundario')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Sitio Web')),
                ('address', models.TextField(verbose_name='Dirección')),
                ('city', models.CharField(default='Quito', max_length=100, verbose_name='Ciudad')),
                ('zone', models.CharField(blank=True, help_text='Ej: Norte, Sur, Cumbayá, etc.', max_length=100, verbose_name='Zona/Sector')),
                ('ruc', models.CharField(blank=True, help_text='Registro Único de Contribuyentes', max_length=13, verbose_name='RUC')),
                ('rating', models.IntegerField(choices=[(1, '⭐ Básico'), (2, '⭐⭐ Regular'), (3, '⭐⭐⭐ Bueno'), (4, '⭐⭐⭐⭐ Muy Bueno'), (5, '⭐⭐⭐⭐⭐ Excelente')], default=3, verbose_name='Calificación')),
                ('payment_terms', models.CharField(blank=True, help_text='Ej: 30 días, contado, etc.', max_length=200, verbose_name='Términos de Pago')),
                ('delivery_time', models.CharField(blank=True, help_text='Tiempo promedio de entrega', max_length=100, verbose_name='Tiempo de Entrega')),
                ('minimum_order', models.DecimalField(blank=True, decimal_places=2, help_text='Monto mínimo de pedido', max_digits=10, null=True, verbose_name='Pedido Mínimo')),
                ('offers_delivery', models.BooleanField(default=True, verbose_name='Ofrece Entrega a Domicilio')),
                ('delivery_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Costo de entrega a domicilio', max_digits=8, null=True, verbose_name='Costo de Entrega')),
                ('notes', models.TextField(blank=True, help_text='Observaciones adicionales sobre el proveedor', verbose_name='Notas')),
                ('strengths', models.TextField(blank=True, help_text='Puntos fuertes del proveedor', verbose_name='Fortalezas')),
                ('weaknesses', models.TextField(blank=True, help_text='Aspectos a mejorar del proveedor', verbose_name='Debilidades')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_preferred', models.BooleanField(default=False, verbose_name='Proveedor Preferido')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_contact_date', models.DateField(blank=True, null=True, verbose_name='Última Fecha de Contacto')),
                ('categories', models.ManyToManyField(blank=True, help_text='Categorías de materiales que ofrece este proveedor', to='materials.materialcategory', verbose_name='Categorías que Maneja')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Moneda')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Descuento (%)')),
                ('bulk_discount_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Umbral para Descuento por Volumen')),
                ('bulk_discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Descuento por Volumen (%)')),
                ('valid_from', models.DateField(verbose_name='Válido Desde')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Válido Hasta')),
                ('is_current', models.BooleanField(default=True, verbose_name='Precio Actual')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_prices', to='materials.material')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='suppliers.supplier')),
            ],
            options={
                'verbose_name': 'Precio de Proveedor',
                'verbose_name_plural': 'Precios de Proveedores',
                'db_table': 'supplier_prices',
                'ordering': ['-created_at'],
            },
        ),
    ]
