# Generated by Django 5.0.1 on 2025-08-07 04:30

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('budgets', '0001_initial'),
        ('materials', '0001_initial'),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalculationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Calculadora')),
                ('code', models.CharField(help_text='Código único para identificar el tipo de cálculo', max_length=50, unique=True, verbose_name='Código')),
                ('category', models.CharField(choices=[('construction', 'Construcción'), ('lighting', 'Iluminación')], max_length=20, verbose_name='Categoría')),
                ('description', models.TextField(help_text='Descripción de qué calcula esta calculadora', verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('input_parameters', models.JSONField(default=dict, help_text='Definición de los parámetros que requiere esta calculadora', verbose_name='Parámetros de Entrada')),
            ],
            options={
                'verbose_name': 'Tipo de Calculadora',
                'verbose_name_plural': 'Tipos de Calculadoras',
                'db_table': 'calculation_types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.JSONField(help_text='Parámetros utilizados para el cálculo', verbose_name='Datos de Entrada')),
                ('calculated_quantity', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Cantidad Calculada')),
                ('unit', models.CharField(max_length=20, verbose_name='Unidad')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Costo estimado basado en precios de referencia', max_digits=10, null=True, verbose_name='Costo Estimado')),
                ('detailed_results', models.JSONField(default=dict, help_text='Resultados completos del cálculo incluyendo materiales secundarios', verbose_name='Resultados Detallados')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('added_to_budget', models.BooleanField(default=False, help_text='Indica si este cálculo ya fue agregado al presupuesto', verbose_name='Agregado al Presupuesto')),
                ('budget_item_created', models.ForeignKey(blank=True, help_text='Referencia al item de presupuesto creado desde este cálculo', null=True, on_delete=django.db.models.deletion.SET_NULL, to='budgets.budgetitem', verbose_name='Item de Presupuesto Creado')),
                ('material', models.ForeignKey(blank=True, help_text='Material principal calculado', null=True, on_delete=django.db.models.deletion.SET_NULL, to='materials.material', verbose_name='Material Principal')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculations', to='projects.project', verbose_name='Proyecto')),
                ('calculation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculations.calculationtype', verbose_name='Tipo de Cálculo')),
            ],
            options={
                'verbose_name': 'Cálculo',
                'verbose_name_plural': 'Cálculos',
                'db_table': 'calculations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CableCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_length', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Longitud Total (m)')),
                ('wire_gauge', models.CharField(help_text='Ej: 12 AWG, 14 AWG, 2.5mm²', max_length=20, verbose_name='Calibre del Cable')),
                ('cable_type', models.CharField(help_text='Ej: THHN, THW, Flexible', max_length=50, verbose_name='Tipo de Cable')),
                ('installation_type', models.CharField(help_text='Ej: Conduit, Bandeja, Directo', max_length=50, verbose_name='Tipo de Instalación')),
                ('rolls_needed', models.IntegerField(verbose_name='Rollos Necesarios')),
                ('meters_per_roll', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=6, verbose_name='Metros por Rollo')),
                ('calculation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cable_details', to='calculations.calculation')),
            ],
            options={
                'verbose_name': 'Cálculo de Cable',
                'verbose_name_plural': 'Cálculos de Cables',
                'db_table': 'cable_calculations',
            },
        ),
        migrations.CreateModel(
            name='GypsumCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_to_cover', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Área a Cubrir (m²)')),
                ('thickness', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Espesor (mm)')),
                ('gypsum_type', models.CharField(help_text='Ej: Standard, Resistente a humedad, Acústico', max_length=50, verbose_name='Tipo de Gypsum')),
                ('sheets_needed', models.IntegerField(verbose_name='Planchas Necesarias')),
                ('linear_meters_profile', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Metros Lineales de Perfil')),
                ('calculation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gypsum_details', to='calculations.calculation')),
            ],
            options={
                'verbose_name': 'Cálculo de Gypsum',
                'verbose_name_plural': 'Cálculos de Gypsum',
                'db_table': 'gypsum_calculations',
            },
        ),
        migrations.CreateModel(
            name='LEDStripCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_length', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Longitud Total (m)')),
                ('power_per_meter', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Potencia por Metro (W/m)')),
                ('voltage', models.CharField(help_text='Ej: 12V, 24V, 110V', max_length=10, verbose_name='Voltaje')),
                ('strip_type', models.CharField(help_text='Ej: SMD5050, SMD3528, COB', max_length=50, verbose_name='Tipo de Cinta LED')),
                ('total_power', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Potencia Total (W)')),
                ('drivers_needed', models.IntegerField(verbose_name='Drivers Necesarios')),
                ('meters_per_roll', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=6, verbose_name='Metros por Rollo')),
                ('rolls_needed', models.IntegerField(verbose_name='Rollos Necesarios')),
                ('calculation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='led_strip_details', to='calculations.calculation')),
            ],
            options={
                'verbose_name': 'Cálculo de Cinta LED',
                'verbose_name_plural': 'Cálculos de Cintas LED',
                'db_table': 'led_strip_calculations',
            },
        ),
        migrations.CreateModel(
            name='PaintCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_to_paint', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Área a Pintar (m²)')),
                ('number_of_coats', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Número de Capas')),
                ('paint_type', models.CharField(help_text='Ej: Látex, Esmalte, Anticorrosivo', max_length=50, verbose_name='Tipo de Pintura')),
                ('coverage_per_liter', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Rendimiento (m²/L)')),
                ('total_liters_needed', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Litros Totales Necesarios')),
                ('gallons_needed', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Galones Necesarios')),
                ('calculation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paint_details', to='calculations.calculation')),
            ],
            options={
                'verbose_name': 'Cálculo de Pintura',
                'verbose_name_plural': 'Cálculos de Pintura',
                'db_table': 'paint_calculations',
            },
        ),
    ]
